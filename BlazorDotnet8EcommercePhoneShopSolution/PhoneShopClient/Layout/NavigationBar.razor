@implements IDisposable
<nav class="navbar navbar-expand-lg navbar-light bg-light mt-5">
    <div class="container-fluid">
        <a class="navbar-brand" @onclick="GotoCartPage" style="cursor:pointer">
            <i class="fa fa-cart-shopping text-danger"></i>
            <span class="small text-danger fw-bold">@cartService.CartCount</span>
            <h6>
                 
                <AuthorizeView>
                    <Authorized>@context.User.Identity!.Name</Authorized>
                    <NotAuthorized> Бүртгэлгүй хэрэглэгч</NotAuthorized>
                </AuthorizeView>
            </h6>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse fw-bold" id="navbarSupportedContent" style="maring-left:25vw">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0" style="font-family:MyFont">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" style="margin-right:20px" href="/">НҮҮР</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link d-flex align-items-center" style="margin-right:20px" href="/products">БҮТЭЭГДЭХҮҮҮН</a>
                </li>
                
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        АККАУНТ
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown" style="font-family:sans-serif">
                        <AuthorizeView>
                            <Authorized>
                                <li>
                                    <button class="btn btn-danger btn-none" @onclick="Logout"><i class="fa fa-lock-open"></i>ГАРАХ</button>
                                </li>
                            </Authorized>
                            <NotAuthorized>
                                @{
                                    string register = "register";
                                    string login = "login";
                                }
                                <li>
                                    <button class="btn btn-none" @onclick="()=> NavigateTo(login)"><i class="fa fa-lock"></i>НЭВТРЭХ</button>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <button class="btn btn-none" @onclick="()=> NavigateTo(register)"><i class="fa fa-sign-in-alt"></i>БҮРТГҮҮЛЭХ</button>
                                </li>
                            </NotAuthorized>
                        </AuthorizeView>
                    </ul>
                </li>
            </ul>
            @if (ShowSearchIcon)
                {
                    <button @onclick="SearchClicked" class="btn btn-none">
                        <i class="fa fa-magnifying-glass fs-5" style="cursor:pointer"></i>
                    </button>
                }
            @if (ShowSearch)
                {
                    <SearchComponent></SearchComponent>
                }
            @*<form class="d-flex">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>*@
        </div>
    </div>
</nav>
@code {
    public bool ShowSearch { get; set; }
    public bool ShowSearchIcon { get; set; } = true;
    protected async override Task OnInitializedAsync()
    {
        await cartService.GetCartCount();
        cartService.CartAction += StateHasChanged;
    }
    void SearchClicked() {
        ShowSearch = true;
        ShowSearchIcon = !ShowSearch;
    }
    void NavigateTo(string url)
    {
        NavManager.NavigateTo($"identity/account/{url}");
    }

    void GotoCartPage()
    {
        NavManager.NavigateTo($"shopping/cart/my-cart");
    }
    private async Task Logout()
    {
        var logoutModel = new TokenProp();
        var customAuthStateProvider = (CustomAuthenticationstateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }
    public void Dispose()
    {
        cartService.CartAction -= StateHasChanged;
    }
}

